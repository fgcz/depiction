[project]
name = "depiction"
version = "0.1.0"
description = ""
authors = [{name = "Leonardo Schwarz", email = "leonardo.schwarz@fgcz.ethz.ch"}]
readme = "README.md"

dependencies = [
    "spatialdata@git+https://github.com/leoschwarz/spatialdata@py3_12-support",
    "spatialdata-plot>=0.2.1",
    "alphapept>=0.5.2",
    "altair>=5.2.0",
    "h5py>=3.10.0",
    "matplotlib>=3.8.2",
    "numba>=0.59.0",
    "numpy>=1.26.2",
    "opencv-python>=4.9.0.80",
    "pandas>=2.1.4",
    "pillow>=10.1.0",
    "polars>=0.20.14",
    "pydantic>=2.6.0",
    "pyimzml>=1.5.3",
    "pyyaml>=6.0.1",
    "quarto-cli>=1.4.550",
    "rpy2>=3.5.14",
    "scikit-image>=0.22.0",
    "scikit-learn>=1.3.2",
    "scipy>=1.11.4",
    "seaborn>=0.13.0",
    "snakemake>=8.10.7",
    "sparse>=0.15.4",
    "statsmodels>=0.14.0",
    "tqdm>=4.66.1",
    "typer>=0.12.3",
    "vegafusion[embed]>=1.6.5",
    "xarray",
    "netCDF4",
    # TODO actually figure out which is the most useful, there is also tifffile and ome-types
    "pyometiff>=1.0.0",
    "ome-types>=0.5.1",
    "loguru"
]

[project.optional-dependencies]
testing = [
    "coverage>=7.4.3",
    "hypothesis>=6.99.11",
    "mypy>=1.9.0",
    "pytype>=2023.12.18",
    "logot"
]
dev = [
    "bokeh>=3.3.2",
    "hvplot>=0.9.0",
    "jupyterlab>=4.0.9",
    "kdepy>=1.1.8",
    "patchworklib>=0.6.3",
    "plotly>=5.19.0",
    "plotly-resampler>=0.9.2",
    "pyarrow>=14.0.1",
    "rich>=13.7.0",
    "ruff>=0.3.5",
    "tifffile>=2024.2.12",
    "bfabric@git+https://github.com/fgcz/bfabricPy#0.13.8",
    "xmltodict",
    "licensecheck",
    "spectrum_utils[iplot]"
]

# potentially relevant in the future again:
# - pybaselines

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 120

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"

[tool.licensecheck]
using = "PEP631"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["ANN", "BLE", "D103", "E", "F", "PLW", "PTH", "SIM", "UP", "TCH"]
ignore = ["ANN101", "ANN102"]

[tool.coverage.report]
# TODO make it work?
exclude_also = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    ]
