[project]
name = "depiction"
version = "0.1.0"
description = ""
authors = [{name = "Leonardo Schwarz", email = "leonardo.schwarz@fgcz.ethz.ch"}]
readme = "README.md"
license = { text = "Apache-2.0" }

dependencies = [
    "alphapept>=0.5.2",
    # TODO investigate
    "altair<5.4.0",
    "h5py>=3.10.0",
    "matplotlib>=3.8.2",
    "numba>=0.59.0",
    # TODO unpin when https://github.com/Unidata/netcdf4-python/issues/1343 is resolved
    "numpy>=1.26.2,<2.0.0",
    "opencv-python>=4.9.0.80",
    "pandas>=2.1.4",
    "pillow>=10.1.0",
    "polars>=0.20.14",
    "pydantic>=2.6.0",
    "pyimzml>=1.5.3",
    "pyyaml>=6.0.1",
    "quarto-cli>=1.4.550",
    "scikit-image>=0.22.0",
    "scikit-learn>=1.3.2",
    "scipy>=1.11.4",
    "seaborn>=0.13.0",
    "snakemake>=8.10.7",
    "sparse>=0.15.4",
    "statsmodels>=0.14.0",
    "tqdm>=4.66.1",
    "typer>=0.12.3",
    "cyclopts",
    "vegafusion[embed]>=1.6.5",
    "xarray",
    # TODO unpin when https://github.com/Unidata/netcdf4-python/issues/1343 is resolved
    "netCDF4<=1.7.1",
    "bioio @ git+https://github.com//bioio-devs/bioio.git@127a87db296db4462a73b227287c9a2a1f190e14",
    "bioio-ome-tiff",
    "loguru",
    "ms-peak-picker",
    "kdepy>=1.1.8",
    "perlin-noise==1.13",
    # TODO demote to optional again later, but necessary for pycharm right now
    "bfabric @ git+https://github.com/fgcz/bfabricPy.git@main",
    "app_runner @ git+https://github.com/fgcz/bfabricPy.git@main#egg=app_runner&subdirectory=app_runner",
]

[project.scripts]
depiction-tools = "depiction.tools.cli.cli:app"

[project.optional-dependencies]
testing = [
    "coverage>=7.4.3",
    "hypothesis>=6.99.11",
    "pytype>=2023.12.18",
    "logot",
    "pytest",
    "pytest-mock"
]
dev = [
    "depiction[testing]",
    "bokeh>=3.3.2",
    "hvplot>=0.9.0",
    "jupyterlab>=4.0.9",
    "patchworklib>=0.6.3",
    "pyarrow>=14.0.1",
    "rich>=13.7.0",
    "ruff>=0.3.5",
    "xmltodict",
    "licensecheck",
    "hdbscan",
    "nox[uv]",
    "spatialdata>=0.2.3",
    "spatialdata-plot>=0.2.1",
    "types-tqdm",
    "rpy2",
    "pytype",
    "streamlit"
]
doc = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-awesome-pages-plugin",
]
apps = [
    "bfabric @ git+https://github.com/fgcz/bfabricPy.git@main"
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
depiction_targeted_preproc = ["**/*.smk", "**/Snakefile", "**/*.yml", "**/*.yaml"]

[tool.black]
line-length = 120

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"

[tool.licensecheck]
using = "PEP631"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["ANN", "BLE", "D103", "E", "F", "PLW", "PTH", "SIM", "UP", "TCH"]
# Note: "TCH002" would be useful, but it also has false positives and needs to be deactivated in particular
#        for the command-line interface module since the inspect module will currently fail everything there.
ignore = ["ANN101", "ANN102", "TCH002"]

[tool.coverage.report]
# TODO make it work?
exclude_also = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    ]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.codespell]
ignore-words-list = "averagine,coo"

[tool.check-tests-structure]
sources_path = "src/depiction"
tests_path = "tests/unit"
allow_missing_tests = true
